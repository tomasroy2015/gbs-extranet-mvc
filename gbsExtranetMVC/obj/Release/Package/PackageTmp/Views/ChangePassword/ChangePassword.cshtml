@model gbsExtranetMVC.Models.Repositories.ContactUsExt
@using Resources
@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .tblUsers {
        text-align: left;
    }

        .tblUsers th, td {
            padding-top: 10px;
        }

        .tblUsers td {
            padding-left: 15px;
        }
</style>

<h2 style="color: black; text-align: center;"> @Resources.ChangePassword</h2>

<div id="content" class="span10">
    @using (Html.BeginForm("ChangePassword", "ChangePassword", FormMethod.Post))
    {
        <div id="qms-detail-table-wrapper" class="center">
            <div class="table-responsive">
                <table class="table table-striped table-bordered">
                   
                    <tr class="col-md-12">
                        <th class="col-md-4">
                            @Html.LabelFor(m=>m.Email,Resources.CurrentPassword, new{@id="lblCurrentPassword"})
                        </th>
                       
                        <td class="col-md-8">
                            @Html.PasswordFor(m => m.Email, new { @id = "txtCurrentPassword", @class = "k-textbox" })
                            @Html.Label("*", new { @class = "requiredfield" })
                            <span style="color:red;display:none" id="txtCurrnetPwd" >@Html.ValidationMessageFor(m => m.Email, Resources.RequiredFieldWarning)</span>
                        </td>
                       
                    </tr>
                    <tr class="col-md-12">
                        <th class="col-md-4">
                            @Html.LabelFor(m => m.Email, Resources.NewPassword, new { @id = "lblNewPassword" })
                        </th>

                        <td class="col-md-8">
                            @Html.PasswordFor(m => m.Email, new { @id = "txtNewPassword", @class = "k-textbox" })
                            @Html.Label("*", new { @class = "requiredfield" })
                            <span style="color: red; display: none" id="txtNewPwd">@Html.ValidationMessageFor(m => m.Email, Resources.RequiredFieldWarning)</span>
                            <span style="color: red; display: none" id="txtNewPwdStrength">@Html.ValidationMessageFor(m => m.Email, Resources.PasswordStrengthWarning)</span>
                        </td>

                    </tr>
                    <tr class="col-md-12">
                        <th class="col-md-4">
                            @Html.LabelFor(m => m.Email, Resources.PasswordVerification, new { @id = "lblNewPasswordVerification" })
                        </th>

                        <td class="col-md-8">
                            @Html.PasswordFor(m => m.Email, new { @id = "txtNewPasswordVerification", @class = "k-textbox" })
                            @Html.Label("*", new { @class = "requiredfield" })
                            <span style="color:red;display:none" id="txtNewPwdVerification">@Html.ValidationMessageFor(m => m.Email, Resources.RequiredFieldWarning)</span>
                            <span style="color: red; display: none" id="txtVerificationPwdStrenth">@Html.ValidationMessageFor(m => m.Email, Resources.PasswordVerificationWarning)</span>
                        </td>

                    </tr>
                   
                </table>
            </div>
       </div>
    }
    </div>
<div align="center">
    <a title='Click here to Save Commission Details' style='text-decoration:underline;'>
        <input type="button" value="@Resources.Save" onclick="SavePassword()" class="k-button" style="width:200px; height:50px; background-color:#0062D9; color:white; font-weight:bold;" />
    </a>
    <br />
    <label id="lblSuccess" style="color:green;font-size:medium;display:none;">@Resources.YourPasswordwillberesetSuccessfully</label>
    <label id="lblCurrentPasswordMatchWarning" style="color: red; display: none;">@Resources.CurrentPasswordMatchWarning</label>
</div>

<script>
    
    function SavePassword() {
        //alert('hi')
        var CurrentPassword = document.getElementById('txtCurrentPassword').value;
        // alert(CurrentPassword)
        var NewPassword = document.getElementById('txtNewPassword').value;
        // alert(NewPassword)
        var Verification = document.getElementById('txtNewPasswordVerification').value;
        //  alert(Verification)

        if (CurrentPassword == "") {
            document.getElementById('txtCurrnetPwd').style.display = "";
        }
        else {
            document.getElementById('txtCurrnetPwd').style.display = "none";
        }

        if (NewPassword == "") {
            document.getElementById('txtNewPwd').style.display = "";
        }
        else {
            document.getElementById('txtNewPwd').style.display = "none";
        }

        if (Verification == "") {
            document.getElementById('txtNewPwdVerification').style.display = "";
        }
        else {
            document.getElementById('txtNewPwdVerification').style.display = "none";
        }

        //if (CurrentPassword != "") {
        //    // alert('CurrentPassword')
        //   // var pattern = "^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$";
        //    var pattern = /^.*(?=.{8,})(?=.*\d)(?=.*[a-zA-Z]).*$/;
        //    alert(pattern)           
        //    if (pattern.test(CurrentPassword)) {
        //        alert('CurrentPassword')
        //        document.getElementById('txtCurrentPassword').style.borderColor = "none";
        //    }
        //    else {
        //        alert('NewPassword')
        //        document.getElementById('txtCurrentPassword').style.borderColor = "red";
        //    }
        //}

        //alert(CurrentPassword)
        //alert(NewPassword)
        //alert(Verification)

        if (NewPassword != "") {
            var pattern = /^.*(?=.{8,})(?=.*\d)(?=.*[a-zA-Z]).*$/;
            if (pattern.test(NewPassword)) {
                document.getElementById('txtNewPwdStrength').style.display = "none";
            }

            else {
                document.getElementById('txtNewPwdStrength').style.display = "";
            }
        }
        // alert(pattern.test(NewPassword))
        if (NewPassword != "" && Verification != "" && pattern.test(NewPassword)) {

            if (NewPassword == Verification) {
                document.getElementById('txtVerificationPwdStrenth').style.display = "none";
            }
            else {
                document.getElementById('txtVerificationPwdStrenth').style.display = "";
            }
        }

        // alert('hi')
        if (CurrentPassword != "" && NewPassword != "" && Verification != "" && pattern.test(NewPassword) && NewPassword == Verification) {

            // alert('hiin')
            var json = {
                CurrentPassword: CurrentPassword, NewPassword: NewPassword, Verification: Verification
            }
            $.ajax({
                type: "Get",
                url: "/ChangePassword/ChangePasswords",
                data: json,
                datatype: "JSON",
                success: function (res) {
                    if (res != 0) {
                        document.getElementById("lblSuccess").style.display = "";
                        document.getElementById("lblCurrentPasswordMatchWarning").style.display = "none";
                        document.getElementById('txtCurrentPassword').value = "";
                        document.getElementById('txtNewPassword').value = "";
                        document.getElementById('txtNewPasswordVerification').value = "";
                    }
                    else
                    {
                        document.getElementById("lblSuccess").style.display = "none";
                        document.getElementById("lblCurrentPasswordMatchWarning").style.display = "";                        
                    }
                }
            })
        }

    }
</script>


<script>
    (function (i, s, o, g, r, a, m) {
        i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
            (i[r].q = i[r].q || []).push(arguments)
        }, i[r].l = 1 * new Date(); a = s.createElement(o),
        m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

    ga('create', 'UA-63530100-1', 'auto');
    ga('send', 'pageview');

</script>
