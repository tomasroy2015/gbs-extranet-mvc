@using Resources
@using MessageColumnCaptions


<h1 style="text-align:center;">TB_HotelPromotionHistory</h1>


<div class="jumbotron" style="text-align: left; margin-bottom: 50px;border-radius:8px;padding: 10px;font-size: 15px;font-weight: 100;line-height: 1.142857;">
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-6 col-sm-6">
                <div class="col-md-4 col-sm-4 " style="padding: 8px;">
                    <label>@MessageColumnCaptions.TB_HotelReservationRateHistory("HotelReservationRateID")</label>
                </div>
                <div class="col-md-6 col-sm-6 " style="padding: 8px;">
                    <input id="txthotelReservationrateid" type="text" class="form-control" style="width:100%" />
                </div>
            </div>
            <div class="col-md-4 col-sm-4">
                <div class="col-md-3 col-sm-3 " style="padding: 8px;">
                    <label>@MessageColumnCaptions.TB_HotelReservationRateHistory("DateID")</label>
                </div>
                <div class="col-md-8 col-sm-8 " style="padding: 8px;">
                    <input id="drpDateID" />

                </div>

            </div>
        </div>
        <br />
        <br />
        <br />
        <br />
       
        <div class="col-md-12">
            <div class="col-md-5  col-sm-5">
                <div class="col-md-5  col-sm-5" style="padding: 5px;">
                    <label> @MessageColumnCaptions.TB_HotelReservationRateHistory("LogDateTime") (@Resources.FilterLowerLimitDescription)</label>
                </div>
                <div class="col-md-7  col-sm-7" style="padding: 5px;">
                    <input type="text" id="datetimepickerStart" placeholder="@Resources.DateFieldDescription" style="width: 100%; height:25px;" />
                </div>

            </div>
            <div class="col-md-5  col-sm-5">

                <div class="col-md-5  col-sm-5" style="padding: 5px;">
                    <label>@MessageColumnCaptions.TB_HotelReservationRateHistory("LogDateTime")  (@Resources.FilterUpperLimitDescription)</label>
                </div>
                <div class="col-md-7  col-sm-7" style="padding: 5px;">
                    <input type="text" id="datetimepickerEnd" placeholder="@Resources.DateFieldDescription" style="width: 100%; height:25px;" />
                </div>

            </div>


            <div class="col-md-2  col-sm-2" style="padding: 10px;">
                <button id="btnfilter" class="btn btn-info" onclick="Filter()">@Resources.Filter</button>
                <button class="btn btn-info" id="btnClearFilter" onclick="clearFiter()">@Resources.RemoveFilter</button>
            </div>
        </div>
    </div>
</div>

<script>

    $("#btnfilter").click(function () {

        $filter = new Array();
        $HotelReservationrateid = $("#txthotelReservationrateid").val();
        $StartDate = $("#datetimepickerStart").data("kendoDatePicker").value();
        $EndDate = $("#datetimepickerEnd").data("kendoDatePicker").value();
        $DateText = $("#drpDateID").data("kendoDropDownList").text();
        $Dateid = $("#drpDateID").val();

        if ($HotelReservationrateid) {
            $filter.push({ field: "HotelReservationRateID", operator: "contains", value: $HotelReservationrateid });
        }

        if ($Dateid) {
            $filter.push({ field: "Date", operator: "EqualTo", value: $DateText });
        }

        if ($StartDate) {
            $filter.push({ field: "LogDateTime", operator: "IsGreaterThanOrEqualTo", value: $StartDate });
        }
        if ($EndDate) {
            $filter.push({ field: "LogDateTime", operator: "IsLessThanOrEqualTo", value: $EndDate });
        }
       
       
        var grid = $("#TB_HotelReservationRateHistory_Grid").data("kendoGrid");
        grid.dataSource.filter($filter);
    });

    var AllSelectText = '@Resources.ListAllExpression'

    $(document).ready(function () {


        $("#datetimepickerStart").kendoDatePicker({
            animation: {
                close: {
                    effects: "zoom:out",
                    duration: 300
                }
            }
        });
        $("#datetimepickerEnd").kendoDatePicker({
            animation: {
                close: {
                    effects: "zoom:out",
                    duration: 300
                }
            }
        });


        var json = {}
        $.ajax({
            type: "GET",
            url: "/DropDownLists/GetDates",
            data: json,
            datatype: "json",
            success: function (data) {

                $("#drpDateID").kendoDropDownList({

                    filter: "contains",
                    optionLabel: AllSelectText,
                    dataTextField: "Date",
                    dataValueField: "DateID ",
                    dataSource: data
                });

            }
        })
    });



    function clearFiter() {
        $("form.k-filter-menu button[type='reset']").trigger("click");
    }

    $("#btnClearFilter").click(function (e) {
        e.preventDefault();
        var datasource = $("#TB_HotelReservationRateHistory_Grid").data("kendoGrid").dataSource;
        //Clear Custom filters:
        datasource.filter([]);
        //Clear Fields
        $("#txthotelReservationrateid").val('')
        $("#datetimepickerStart").data("kendoDatePicker").value(null);
        $("#datetimepickerEnd").data("kendoDatePicker").value(null);

        var dropdownlistPart = $("#drpDateID").data("kendoDropDownList");
        dropdownlistPart.select("");
      
    });

</script>

@(Html.Kendo().Grid<gbsExtranetMVC.Models.Repositories.TB_HotelReservationRateHistoryExt>()
                        .Name("TB_HotelReservationRateHistory_Grid")
        .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(25)
        .ServerOperation(true)
        .Model(model =>
        {
            model.Id(p => p.ID);
            model.Field(p => p.ID).Editable(false);
        })
                     
                            .Read(read => read.Action("_Read", "TB_HotelReservationRateHistory", new { TableID = (int)ViewBag.TableID }))
                        )

                .Columns(columns =>
                {


                    columns.Bound(p => p.ID).Width(150);
                    columns.Bound(p => p.HotelReservationRateID).Title(MessageColumnCaptions.TB_HotelReservationRateHistory("HotelReservationRateID"));
                    columns.Bound(p => p.HotelReservationID).Width(200).Title(MessageColumnCaptions.TB_HotelReservationRateHistory("HotelReservationID"));
                    columns.Bound(p => p.Date).Width(250).Title(MessageColumnCaptions.TB_HotelReservationRateHistory("DateID"));
                    columns.Bound(p => p.RoomPrice).Width(200).Title(MessageColumnCaptions.TB_HotelReservationRateHistory("RoomPrice"));
                    columns.Bound(p => p.Currency).Width(250).Title(MessageColumnCaptions.TB_HotelReservationRateHistory("CurrencyID"));
                    columns.Bound(p => p.CancelDateTime).Width(200).Title(MessageColumnCaptions.TB_HotelReservationRateHistory("CancelDateTime"));
                    columns.Bound(p => p.Active).Width(250).ClientTemplate("<div style='text-align:center;'> #if(Active){# <img src='/Images/checked.gif' alt='checked'> #} else {# <img src='/Images/red_cross.png' alt='redCross'> #}# </div>").Title(MessageColumnCaptions.TB_HotelReservationRateHistory("Active"));
                    columns.Bound(p => p.LogDateTime).Width(250).Title(MessageColumnCaptions.TB_HotelReservationRateHistory("LogDateTime"));
                    columns.Bound(p => p.LogUser).Width(250).Title(MessageColumnCaptions.TB_HotelReservationRateHistory("LogUserID"));
                   
                })
                .ToolBar(tool =>
                {
                   // tool.Custom().Name("cmdAddNewRecord")
                   //.Text(Resources.NewRecord)
                    //.HtmlAttributes(new { @id = "cmdAddNewRecord" });
                    tool.Excel().Text(Resources.ExporttoExcel);
                })
                .Editable(editable => editable.Mode(GridEditMode.InLine))
                    .Scrollable(scrollable => scrollable.Height(430))
        //.Scrollable().HtmlAttributes(new { @style = "width:1200px;" })

                .Pageable(p => p.Refresh(true))
                .Sortable()
                .Navigatable()
                .Groupable()
                .Scrollable(scr => scr.Height(370))
                .Filterable()
                .Excel(excel => excel
                        .FileName("TB_HotelReservationRateHistory.xlsx")
                .Filterable(true))

)

<script id="AddNewRecord">

    $("#cmdAddNewRecord").click(function (e) {

        var table = $("#TB_HotelReservationRateHistory_Grid").data("kendoGrid");
        var sorting = table.dataSource.sort();

        if (sorting) {
            table.dataSource.sort(null);
        }
        table.addRow();
        e.preventDefault();
        //put custom logic here
    });
</script>
