@using Resources
@using MessageColumnCaptions
@using mailColumnCaptions


<h1 style="text-align:center;">@MessageColumnCaptions.DynamicPageName("TB_DealHistory")</h1>

<div class="jumbotron" style="text-align: left; margin-bottom: 50px;border-radius:8px;padding: 10px;font-size: 15px;font-weight: 100;line-height: 1.142857;">
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-4 col-sm-3" style="display: inline-flex;">
                <label style="width: 100px;margin-top: 6px;">@Resources.DealID</label>
                <input id="txtDealID" class="form-control" type="text" style="width:100%" />
            </div>
            <div class="col-md-4 col-sm-3" style="display: inline-flex;">
                <label>@Resources.BusinessPartner</label>&nbsp;&nbsp;
                &nbsp;<input type="text" id="drbBusiness" style="width: 100%;" />
            </div>
        </div>
        <br />
        <br />
        <br />
        <br />
        <div class="col-md-12">
            <div class="col-md-3  col-sm-3" style="padding: 0px;">
                <div class="col-md-6  col-sm-6" style="padding: 8px;">
                    <label>@MessageColumnCaptions.LogDate (@Resources.FilterLowerLimitDescription)</label>
                </div>
                <div class="col-md-6  col-sm-6" style="padding: 8px;">
                    <input type="text" id="datetimepickerStart" placeholder="@Resources.DateFieldDescription" style="width: 100%;" />
                </div>

            </div>
            <div class="col-md-3 col-sm-3" style="padding: 0px;">

                <div class="col-md-6  col-sm-6" style="padding: 8px;">
                    <label>@MessageColumnCaptions.LogDate (@Resources.FilterUpperLimitDescription)</label>
                </div>
                <div class="col-md-6  col-sm-6" style="padding: 8px;">
                    <input type="text" id="datetimepickerEnd" placeholder="@Resources.DateFieldDescription" style="width: 100%;" />
                </div>

            </div>
            <div class="col-md-4  col-sm-4" style="padding: 10px;">
                <button id="btnfilter" class="btn btn-info" onclick="Filter()">@Resources.Filter</button>
                <button class="btn btn-info" id="btnClearFilter" onclick="clearFiter()">@Resources.RemoveFilter</button>
            </div>
        </div>
    </div>
</div>

@(Html.Kendo().Grid<gbsExtranetMVC.Models.Repositories.TB_DealHistoryExt>()
                        .Name("TB_DealHistoryExt_Grid")
        .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(25)
        .ServerOperation(true)
        .Model(model =>
        {
            model.Id(p => p.ID);
            //model.Field(p => p.ID).Editable(false);
        })
            //.Create(update => update.Action("_Create", "BizTbl_TableSecurityGroupRight"))
                        .Read(read => read.Action("_Read", "TB_DealHistory", new { TableID = (int)ViewBag.TableID }))
        //.Update(update => update.Action("_Update", "BizTbl_TableSecurityGroupRight"))
        //.Destroy(destroy => destroy.Action("_Destroy", "BizTbl_TableSecurityGroupRight"))

        )

                            .Columns(columns =>
            {
                columns.Command(

                                   command =>
                                   {
                                       //command.Edit().UpdateText(Resources.Update).CancelText(Resources.Cancel).Text(Resources.Edit);
                                       //command.Destroy();
                                   });

                columns.Bound(p => p.ID).Width(150).Locked(true); //EditorTemplateName (/Shared/EditorTempaltes/ddlCountries) used to Display Dropdown list and it will return Int value to Controller
                //columns.Bound(p => p.DealReservationID).Title(MessageColumnCaptions.TB_DealReservationCaption("DealReservationID")).Width(250).Locked(true);
                columns.Bound(p => p.DealID).Title(MessageColumnCaptions.TB_DealHistoryCaption("DealID")).Width(250).Locked(true);
                columns.Bound(p => p.BusinessPartner).Title(MessageColumnCaptions.TB_DealHistoryCaption("BusinessPartnerID")).Width(250).Locked(true);
                columns.Bound(p => p.RegionID).Title(MessageColumnCaptions.TB_DealHistoryCaption("RegionID")).Width(250);
                columns.Bound(p => p.Name).Title(MessageColumnCaptions.TB_DealHistoryCaption("Name_en")).Width(250);
                columns.Bound(p => p.Description).Title(MessageColumnCaptions.TB_DealHistoryCaption("Description_en")).Width(250);
                columns.Bound(p => p.SpecialNote_tr).Title(MessageColumnCaptions.TB_DealHistoryCaption("SpecialNote_tr")).Width(250);
                columns.Bound(p => p.SpecialNote_en).Title(MessageColumnCaptions.TB_DealHistoryCaption("SpecialNote_en")).Width(250);
                columns.Bound(p => p.SpecialNote_de).Title(MessageColumnCaptions.TB_DealHistoryCaption("SpecialNote_de")).Width(250);
                columns.Bound(p => p.SpecialNote_es).Title(MessageColumnCaptions.TB_DealHistoryCaption("SpecialNote_es")).Width(250);
                columns.Bound(p => p.SpecialNote_fr).Title(MessageColumnCaptions.TB_DealHistoryCaption("SpecialNote_fr")).Width(250);
                columns.Bound(p => p.SpecialNote_ru).Title(MessageColumnCaptions.TB_DealHistoryCaption("SpecialNote_ru")).Width(250);
                columns.Bound(p => p.SpecialNote_it).Title(MessageColumnCaptions.TB_DealHistoryCaption("SpecialNote_it")).Width(250);
                columns.Bound(p => p.SpecialNote_ar).Title(MessageColumnCaptions.TB_DealHistoryCaption("SpecialNote_ar")).Width(250);
                columns.Bound(p => p.SpecialNote_jp).Title(MessageColumnCaptions.TB_DealHistoryCaption("SpecialNote_jp")).Width(250);
                columns.Bound(p => p.StartDate).Title(MessageColumnCaptions.TB_DealHistoryCaption("StartDate")).ClientTemplate("#= kendo.toString(StartDate,'dd/MM/yyyy HH:mm:ss') #").Width(250);
                columns.Bound(p => p.EndDate).Title(MessageColumnCaptions.TB_DealHistoryCaption("EndDate")).ClientTemplate("#= kendo.toString(EndDate,'dd/MM/yyyy HH:mm:ss') #").Width(250);
                columns.Bound(p => p.Quota).Title(MessageColumnCaptions.TB_DealHistoryCaption("Quota")).Width(250);
                columns.Bound(p => p.Amount).Title(MessageColumnCaptions.TB_DealHistoryCaption("Amount")).Width(250);
                columns.Bound(p => p.CurrencyID).Title(MessageColumnCaptions.TB_DealHistoryCaption("CurrencyID")).Width(250);
                columns.Bound(p => p.Cost).Title(MessageColumnCaptions.TB_DealHistoryCaption("Cost")).Width(250);
                columns.Bound(p => p.CostCurrency).Title(MessageColumnCaptions.TB_DealHistoryCaption("CostCurrencyID")).Width(250);
                columns.Bound(p => p.Deposit).Title(MessageColumnCaptions.TB_DealHistoryCaption("Deposit")).Width(250);
                columns.Bound(p => p.DepositCurrency).Title(MessageColumnCaptions.TB_DealHistoryCaption("DepositCurrencyID")).Width(250);
                columns.Bound(p => p.DepositType).Title(MessageColumnCaptions.TB_DealHistoryCaption("DepositTypeID")).Width(250);
                columns.Bound(p => p.BusinessPartnerCancelPolicy).Title(MessageColumnCaptions.TB_DealHistoryCaption("BusinessPartnerCancelPolicyID")).Width(250);
                columns.Bound(p => p.HitCount).Title(MessageColumnCaptions.TB_DealHistoryCaption("HitCount")).Width(250);
                columns.Bound(p => p.IsPopular).Title(MessageColumnCaptions.TB_DealHistoryCaption("IsPopular")).Width(250);
                columns.Bound(p => p.Sort).Title(MessageColumnCaptions.TB_DealHistoryCaption("Sort")).Width(250);
                columns.Bound(p => p.RoutingName).Title(MessageColumnCaptions.TB_DealHistoryCaption("RoutingName")).Width(250);
                columns.Bound(p => p.Active).Title(MessageColumnCaptions.TB_DealHistoryCaption("Active"))
                    .ClientTemplate("<div style='text-align:center;'> #if(Active){# <img src='/Images/checked.gif' alt='checked'> #} else {# <img src='/Images/red_cross.png' alt='redCross'> #}# </div>").Width(120);
                columns.Bound(p => p.CreateDateTime).Title(MessageColumnCaptions.TB_DealHistoryCaption("CreateDateTime")).ClientTemplate("#= kendo.toString(CreateDateTime,'dd/MM/yyyy HH:mm:ss') #").Width(250);
                columns.Bound(p => p.CreateUserID).Title(MessageColumnCaptions.TB_DealHistoryCaption("CreateUserID")).Width(250);
                columns.Bound(p => p.OpDateTime).Title(MessageColumnCaptions.TB_DealHistoryCaption("OpDateTime")).ClientTemplate("#= kendo.toString(OpDateTime,'dd/MM/yyyy HH:mm:ss') #").Width(250);
                columns.Bound(p => p.OpUser).Title(MessageColumnCaptions.TB_DealHistoryCaption("OpUserID")).Width(250);
                columns.Bound(p => p.IPAddress).Title(MessageColumnCaptions.TB_DealHistoryCaption("IPAddress")).Width(250);
                columns.Bound(p => p.LogDateTime).Title(MessageColumnCaptions.TB_DealHistoryCaption("LogDateTime")).ClientTemplate("#= kendo.toString(LogDateTime,'dd/MM/yyyy HH:mm:ss') #").Width(250);
                columns.Bound(p => p.LogUser).Title(MessageColumnCaptions.TB_DealHistoryCaption("LogUserID")).Width(250);

                
                
                // columns.Bound(p => p.LogDate).Title(MessageColumnCaptions.TB_DealReservationCaption("LogDateTime")).ClientTemplate("#= kendo.toString(LogDate,'dd/MM/yyyy HH:mm:ss') #").Width(250);
                // columns.Bound(p => p.LogUser).Title(MessageColumnCaptions.TB_DealReservationCaption("LogUserID")).Width(250);

            })
                .ToolBar(tool =>
                {
                    // tool.Custom().Name("cmdAddNewRecord")
                    //.Text(Resources.NewRecord)
                    //.HtmlAttributes(new { @id = "cmdAddNewRecord" });

                    tool.Excel().Text(Resources.ExporttoExcel);
                })
                .Editable(editable => editable.Mode(GridEditMode.InLine))
                    .Scrollable(scrollable => scrollable.Height(430))
        //.Scrollable().HtmlAttributes(new { @style = "width:1200px;" })

                .Pageable(p => p.Refresh(true))
                .Sortable()
                .Navigatable()
                .Groupable()
                .Scrollable(scr => scr.Height(370))
                .Filterable()
                .Excel(excel => excel
                .FileName("TB_DealHistoryExt.xlsx")
                .Filterable(true))

)

<script id="AddNewRecord">

    $("#cmdAddNewRecord").click(function (e) {

        var table = $("#TB_DealHistoryExt_Grid").data("kendoGrid");
        var sorting = table.dataSource.sort();

        if (sorting) {
            table.dataSource.sort(null);
        }
        table.addRow();
        e.preventDefault();
        //put custom logic here
    });
</script>

<script>

    $("#btnfilter").click(function () {
        $filter = new Array();

        $DealID = $("#txtDealID").val();
        $BusinessText = $("#drbBusiness").data("kendoDropDownList").text();
        $BusinessValue = $("#drbBusiness").val();
        $StartDate = $("#datetimepickerStart").data("kendoDatePicker").value();
        $EndDate = $("#datetimepickerEnd").data("kendoDatePicker").value();
    

        if ($DealID) {
            $filter.push({ field: "DealReservationID", operator: "equals", value: String($DealID) });
        }
        if ($BusinessValue != -1) {
            $filter.push({ field: "BusinessPartner", operator: "contains", value: $BusinessText });
        }
        if ($StartDate) {
            $filter.push({ field: "LogDateTime", operator: "IsGreaterThanOrEqualTo", value: $StartDate });
        }
        if ($EndDate) {
            $filter.push({ field: "LogDateTime", operator: "IsLessThanOrEqualTo", value: $EndDate });
        }

        var grid = $("#TB_DealHistoryExt_Grid").data("kendoGrid");
        grid.dataSource.filter($filter);
    });
    var AllSelectText = '@Resources.ListAllExpression'

    $(document).ready(function () {

        $("#datetimepickerStart").kendoDatePicker({
            animation: {
                close: {
                    effects: "zoom:out",
                    duration: 300
                }
            }
        });
        $("#datetimepickerEnd").kendoDatePicker({
            animation: {
                close: {
                    effects: "zoom:out",
                    duration: 300
                }
            }
        });


        var json = {}
        $.ajax({
            type: "GET",
            url: "/BizTbl_UserBusinessPartner/_ReadPart",
            data: json,
            datatype: "json",
            success: function (data) {

                $("#drbBusiness").kendoDropDownList({
                    filter: "contains",
                    Name: "TableID",
                    optionLabel: AllSelectText,
                    dataTextField: "Name",
                    dataValueField: "ID ",
                    // dataValueField: "Name",
                    dataSource: data
                });

            }
        })
    });


    function clearFiter() {
        $("form.k-filter-menu button[type='reset']").trigger("click");
    }

    $("#btnClearFilter").click(function (e) {
        e.preventDefault();
        var datasource = $("#TB_DealHistoryExt_Grid").data("kendoGrid").dataSource;
        //Clear Custom filters:
        datasource.filter([]);
        //Clear Fields
        $("#txtDealID").val('')
        //$("#txtPromotionCode").val('');
        //$("#txtGuestName").val('');

        $("#datetimepickerStart").data("kendoDatePicker").value(null);
        $("#datetimepickerEnd").data("kendoDatePicker").value(null);
        //document.getElementById('chkStatus').checked = false

        var dropdownlistPart = $("#drbBusiness").data("kendoDropDownList");
        dropdownlistPart.select("");
    });

</script>
