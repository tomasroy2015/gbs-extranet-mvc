@using Resources
@using MessageColumnCaptions

<h1 style="color: black; text-align:center">@MessageColumnCaptions.DynamicPageName("TB_HotelHistory")</h1>

<div class="jumbotron" style="text-align: left; margin-bottom: 50px;border-radius:8px;padding: 10px;font-size: 15px;font-weight: 100;line-height: 1.142857;">
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-5 col-sm-5">
                <div class="col-md-4 col-sm-4 " style="padding: 8px;">
                    <label>@MessageColumnCaptions.TB_HotelCaption("ID")</label>
                </div>
                <div class="col-md-7 col-sm-7">
                    <input id="txtFilterID" type="text" class="form-control" style="width:100%" />
                </div>
            </div>
            <div class="col-md-5 col-sm-5">
                <div class="col-md-4 col-sm-4 " style="padding: 8px;">
                    <label>@MessageColumnCaptions.TB_HotelCaption("FirmID")</label>
                </div>
                <div class="col-md-7 col-sm-7">
                    <input id="txtFilterCode" style="width:100%" />
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-4  col-sm-4" style="padding: 0px;">
                <div class="col-md-6  col-sm-6" style="padding: 8px;">
                    <label>@MessageColumnCaptions.LogDate (@Resources.FilterLowerLimitDescription)</label>
                </div>
                <div class="col-md-6  col-sm-6" style="padding: 8px;">
                    <input type="text" id="datetimepickerStart" placeholder="@Resources.DateFieldDescription" style="width: 100%;" />
                </div>

            </div>
            <div class="col-md-4 col-sm-4" style="padding: 0px;">

                <div class="col-md-6  col-sm-6" style="padding: 8px;">
                    <label>@MessageColumnCaptions.LogDate (@Resources.FilterUpperLimitDescription)</label>
                </div>
                <div class="col-md-6  col-sm-6" style="padding: 8px;">
                    <input type="text" id="datetimepickerEnd" placeholder="@Resources.DateFieldDescription" style="width: 100%;" />
                </div>

            </div>
            <div class="col-md-2  col-sm-2" style="padding: 10px;">
                <button id="btnfilter" class="btn btn-info" onclick="Filter()">@Resources.Filter</button>
                <button class="btn btn-info" id="btnClearFilter" onclick="clearFiter()">@Resources.RemoveFilter</button>
            </div>
        </div>
    </div>
</div>

@(Html.Kendo().Grid<gbsExtranetMVC.Models.Repositories.TB_HotelHistoryExt>()
                                                     .Name("TB_HotelHistory_Grid")
        .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .ServerOperation(true)
        .Model(model =>
        {
            model.Id(p => p.ID);
            model.Field(p => p.ID).Editable(true);
        })

                                      .Read(read => read.Action("_Read", "TB_HotelHistory", new { TableID = (int)ViewBag.TableID }))

        )

        .Columns(columns =>
        {


            columns.Bound(p => p.ID).Width(100).Title(MessageColumnCaptions.TB_HotelHistoryCaption("ID"));
            columns.Bound(p => p.HotelID).Width(100).Title(MessageColumnCaptions.TB_HotelHistoryCaption("HotelID"));
            columns.Bound(p => p.Firm).Title(MessageColumnCaptions.TB_HotelHistoryCaption("FirmID")).Width(150);
            columns.Bound(p => p.Room).Width(100).Title(MessageColumnCaptions.TB_HotelHistoryCaption("HotelTypeID"));
            columns.Bound(p => p.HotelClass).Title(MessageColumnCaptions.TB_HotelHistoryCaption("HotelClassID")).Width(120);
            columns.Bound(p => p.HotelChain).Title(MessageColumnCaptions.TB_HotelHistoryCaption("HotelChainID")).Width(120);
            columns.Bound(p => p.HotelAccommodationType).Title(MessageColumnCaptions.TB_HotelHistoryCaption("HotelAccommodationTypeID")).Width(150);
            columns.Bound(p => p.Country).Title(MessageColumnCaptions.TB_HotelHistoryCaption("CountryID")).Width(100);
            columns.Bound(p => p.City).Title(MessageColumnCaptions.TB_HotelHistoryCaption("CityID")).Width(100);
            columns.Bound(p => p.MainRegion).Title(MessageColumnCaptions.TB_HotelHistoryCaption("MainRegionID")).Width(150);
            columns.Bound(p => p.Name).Title(MessageColumnCaptions.TB_HotelHistoryCaption("Name")).Width(100);
            columns.Bound(p => p.Description).Title(MessageColumnCaptions.TB_HotelHistoryCaption("Description_en")).Width(300);
            columns.Bound(p => p.Addres).Title(MessageColumnCaptions.TB_HotelHistoryCaption("Address")).Width(100);
            columns.Bound(p => p.Phone).Title(MessageColumnCaptions.TB_HotelHistoryCaption("Phone")).Width(150);
            columns.Bound(p => p.Fax).Title(MessageColumnCaptions.TB_HotelHistoryCaption("Fax")).Width(100);
            columns.Bound(p => p.PostCode).Title(MessageColumnCaptions.TB_HotelHistoryCaption("PostCode")).Width(150);
            columns.Bound(p => p.RoomCount).Title(MessageColumnCaptions.TB_HotelHistoryCaption("RoomCount")).Width(120);
            columns.Bound(p => p.WebAddress).Title(MessageColumnCaptions.TB_HotelHistoryCaption("WebAddress")).Width(150);
            columns.Bound(p => p.Email).Title(MessageColumnCaptions.TB_HotelHistoryCaption("Email")).Width(100);
            columns.Bound(p => p.CheckinStartTime).Title(MessageColumnCaptions.TB_HotelHistoryCaption("CheckinStart")).Width(130);
            columns.Bound(p => p.CheckinEndTime).Title(MessageColumnCaptions.TB_HotelHistoryCaption("CheckinEnd")).Width(130);
            columns.Bound(p => p.CheckoutStartTime).Title(MessageColumnCaptions.TB_HotelHistoryCaption("CheckoutStart")).Width(130);
            columns.Bound(p => p.CheckoutEndTime).Title(MessageColumnCaptions.TB_HotelHistoryCaption("CheckoutEnd")).Width(130);
            columns.Bound(p => p.FloorCount).Title(MessageColumnCaptions.TB_HotelHistoryCaption("FloorCount")).Width(120);
            columns.Bound(p => p.BuiltYear).Title(MessageColumnCaptions.TB_HotelHistoryCaption("BuiltYear")).Width(100);
            columns.Bound(p => p.RenovationYear).Title(MessageColumnCaptions.TB_HotelHistoryCaption("RenovationYear")).Width(120);
            columns.Bound(p => p.HitCount).Title(MessageColumnCaptions.TB_HotelHistoryCaption("HitCount")).Width(100);
            columns.Bound(p => p.Sort).Title(MessageColumnCaptions.TB_HotelHistoryCaption("Sort")).Width(80);
            columns.Bound(p => p.Status).Title(MessageColumnCaptions.TB_HotelHistoryCaption("StatusID")).Width(150);
            columns.Bound(p => p.Preferred).Title(MessageColumnCaptions.TB_HotelHistoryCaption("IsPreferred")).Width(100);
            columns.Bound(p => p.Currency).Title(MessageColumnCaptions.TB_HotelHistoryCaption("CurrencyID")).Width(100);
            columns.Bound(p => p.Latitude).Title(MessageColumnCaptions.TB_HotelHistoryCaption("Latitude")).Width(100);
            columns.Bound(p => p.Longitude).Title(MessageColumnCaptions.TB_HotelHistoryCaption("Longitude")).Width(100);
            columns.Bound(p => p.MapZoomIndex).Title(MessageColumnCaptions.TB_HotelHistoryCaption("MapZoomIndex")).Width(150);
            columns.Bound(p => p.ClosestAirport).Title(MessageColumnCaptions.TB_HotelHistoryCaption("ClosestAirportID")).Width(100);
            columns.Bound(p => p.ClosestAirportDistance).Title(MessageColumnCaptions.TB_HotelHistoryCaption("ClosestAirportDistance")).Width(150);
            columns.Bound(p => p.ShowOffline).Title(MessageColumnCaptions.TB_HotelHistoryCaption("ShowOffline")).Width(100);
            columns.Bound(p => p.CreditCardNotRequired).Title(MessageColumnCaptions.TB_HotelHistoryCaption("CreditCardNotRequired")).Width(150);
            columns.Bound(p => p.Culture).Title(MessageColumnCaptions.TB_HotelHistoryCaption("CultureID")).Width(100);
            columns.Bound(p => p.RoutingName).Title(MessageColumnCaptions.TB_HotelHistoryCaption("RoutingName")).Width(150);
            columns.Bound(p => p.ChannelManager).Title(MessageColumnCaptions.TB_HotelHistoryCaption("ChannelManagerID")).Width(100);
            columns.Bound(p => p.Active).Title(MessageColumnCaptions.TB_HotelHistoryCaption("Active"))
                 .ClientTemplate("<div style='text-align:center;'> #if(Active){# <img src='/Images/checked.gif' alt='checked'> #} else {# <img src='/Images/red_cross.png' alt='redCross'> #}# </div>")
                 .Width(100);
            columns.Bound(p => p.CreateDate).Title(MessageColumnCaptions.TB_HotelHistoryCaption("CreateDateTime")).ClientTemplate("#= kendo.toString(CreateDate,'dd/MM/yyyy HH:mm:ss') #").Width(150);
            columns.Bound(p => p.CreateUser).Title(MessageColumnCaptions.TB_HotelHistoryCaption("CreateUserID")).Width(120);
            columns.Bound(p => p.OperationDate).Title(MessageColumnCaptions.TB_HotelHistoryCaption("OpDateTime")).Width(120);
            columns.Bound(p => p.LogDate).Title(MessageColumnCaptions.TB_HotelHistoryCaption("LogDateTime")).ClientTemplate("#= kendo.toString(LogDate,'dd/MM/yyyy HH:mm:ss') #").Width(150);
            columns.Bound(p => p.LogUser).Title(MessageColumnCaptions.TB_HotelHistoryCaption("LogUserID")).Width(120);
        })
                .ToolBar(tool =>
                {
                    tool.Excel().Text(Resources.ExporttoExcel);
                })

                .Editable(editable => editable.Mode(GridEditMode.InLine))
                .Scrollable(scrollable => scrollable.Height(430))
                .Pageable(p => p.Refresh(true))
                .Sortable()
                .Navigatable()
                .Groupable()
                .Scrollable(scr => scr.Height(370))
                .Filterable()
                .Excel(excel => excel
                                            .FileName("TB_HotelHistory_Grid.xlsx")
                    .Filterable(true))

)

<script>
    $("#btnfilter").click(function () {
        // alert("dfgd")
        $filter = new Array();
        $StartDate = $("#datetimepickerStart").data("kendoDatePicker").value();
        //  alert($StartDate)
        $EndDate = $("#datetimepickerEnd").data("kendoDatePicker").value();
        //  alert($EndDate)
        $PartText = $("#txtFilterCode").data("kendoDropDownList").text();
        $PartValue = $("#txtFilterCode").val();
        //   alert($PartValue)
        $Code = $("#txtFilterID").val();
        //   alert($Code)

        if ($PartValue) {
            $filter.push({ field: "Firm", operator: "contains", value: $PartText });
        }
        if ($Code) {
            $filter.push({ field: "HotelID", operator: "Equals", value: $Code });
        }
        if ($StartDate) {
            $filter.push({ field: "LogDate", operator: "IsGreaterThanOrEqualTo", value: $StartDate });
        }
        if ($EndDate) {
            $filter.push({ field: "LogDate", operator: "IsLessThanOrEqualTo", value: $EndDate });
        }

        var grid = $("#TB_HotelHistory_Grid").data("kendoGrid");
        grid.dataSource.filter($filter);
    });

    $(document).ready(function () {
        $("#datetimepickerStart").kendoDatePicker({
            animation: {
                close: {
                    effects: "zoom:out",
                    duration: 300
                }
            }
        });
        $("#datetimepickerEnd").kendoDatePicker({
            animation: {
                close: {
                    effects: "zoom:out",
                    duration: 300
                }
            }
        });
    });
    var AllSelectText = '@Resources.ListAllExpression'
    $(document).ready(function () {

        var json = {}
        $.ajax({
            type: "GET",
            url: "/DropDownLists/Firm",
            data: json,
            datatype: "json",
            success: function (data) {

                $("#txtFilterCode").kendoDropDownList({
                    filter: "contains",
                    Name: "FirmID",
                    OptionLabel: AllSelectText,
                    dataTextField: "Name",
                    dataValueField: "FirmID ",
                    dataSource: data
                });

            }
        })

        function clearFiter() {
            $("form.k-filter-menu button[type='reset']").trigger("click");
        }

        $("#btnClearFilter").click(function (e) {
            e.preventDefault();
            var datasource = $("#TB_HotelHistory_Grid").data("kendoGrid").dataSource;
            datasource.filter([]);

            $("#datetimepickerStart").data("kendoDatePicker").value(null);
            $("#datetimepickerEnd").data("kendoDatePicker").value(null);
            var dropdownlistPart = $("#txtFilterCode").data("kendoDropDownList");
            dropdownlistPart.select("");
        });

    });


</script>


