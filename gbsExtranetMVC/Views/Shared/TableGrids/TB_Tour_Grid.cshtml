@using Resources
@using MessageColumnCaptions

<h1 style="color: black; text-align:center">@MessageColumnCaptions.DynamicPageName("TB_Tour")</h1>

<script>
    function RefreshGrid(e) {
        this.read();
    }
</script>

@*<div class="jumbotron" style="text-align: left; margin-bottom: 50px;border-radius:8px;padding: 10px;font-size: 15px;font-weight: 100;line-height: 1.142857;">
    <div class="row" style="margin-top: 10px; margin-bottom: 10px;">
        <div class="col-md-12">
            <div class="col-md-5 col-sm-5">
                <div class="col-md-6 col-sm-6">
                    <label>@MessageColumnCaptions.TB_ReservationStatusHistoryCaption("ReservationID")</label>
                </div>
                <div class="col-md-6 col-sm-6">
                    <input id="txtReservationID" type="text" class="form-control" style="width:100%" placeholder='@MessageColumnCaptions.TB_ReservationStatusHistoryCaption("ReservationID")' />
                </div>
            </div>

            <div class="col-md-5 col-sm-5">
                <div class="col-md-5 col-sm-5">
                    <label>@MessageColumnCaptions.TB_ReservationStatusHistoryCaption("StatusID")</label>
                </div>
                <div class="col-md-7 col-sm-7">
                    <input id="drpStatus" style="width: 100%;" />
                </div>
            </div>
        </div>
    </div>

    <div class="row" style="margin-top: 10px; margin-bottom: 10px;">
        <div class="col-md-12">
            <div class="col-md-4  col-sm-4">
                <div class="col-md-5  col-sm-5" style="padding: 5px;">
                    <label>@Resources.Date (@Resources.FilterLowerLimitDescription)</label>
                </div>
                <div class="col-md-7  col-sm-7" style="padding: 5px;">
                    <input type="text" id="datetimepickerStart" placeholder="@Resources.DateFieldDescription" style="width: 100%; height:25px;" />
                </div>

            </div>
            <div class="col-md-4  col-sm-4">

                <div class="col-md-5  col-sm-5" style="padding: 5px;">
                    <label>@Resources.Date (@Resources.FilterUpperLimitDescription)</label>
                </div>
                <div class="col-md-7  col-sm-7" style="padding: 5px;">
                    <input type="text" id="datetimepickerEnd" placeholder="@Resources.DateFieldDescription" style="width: 100%; height:25px;" />
                </div>

            </div>
            <div class="col-md-3  col-sm-3" style="padding: 5px;">
                <button id="btnfilter" class="btn btn-info" onclick="Filter()">Filter</button>
                <button class="btn btn-info" id="btnClearFilter" onclick="clearFiter()">Clear Filter</button>
            </div>
        </div>
    </div>


</div>*@



@(Html.Kendo().Grid<gbsExtranetMVC.Models.Repositories.TB_TourExt>()
                                        .Name("TB_Tour_Grid")
        .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .Events(events => events.Error("onError").Sync("RefreshGrid"))
        .ServerOperation(true)
        .Model(model =>
        {
            model.Id(p => p.ID);
            model.Field(p => p.ID).Editable(false);
        })
                    .Create(update => update.Action("_Create", "TB_Tour"))
                    .Read(read => read.Action("_Read", "TB_Tour", new { TableID = (int)ViewBag.TableID }))
                        .Update(update => update.Action("_Update", "TB_Tour"))
                        .Destroy(destroy => destroy.Action("_Destroy", "TB_Tour"))
        )

                .Columns(columns =>
                            {
                                columns.Command(

                                    command =>
                                    {
                                        command.Edit().UpdateText(Resources.Update).CancelText(Resources.Cancel).Text(Resources.Edit);
                                        command.Destroy().Text(Resources.Delete);
                                    }).Locked(true).Width(180);

                                columns.Bound(p => p.ID).Title("ID").Width(100).Locked(true); //EditorTemplateName (/Shared/EditorTempaltes/ddlCountries) used to Display Dropdown list and it will return Int value to Controller
                                columns.Bound(p => p.BusinessPartner).Title(MessageColumnCaptions.TB_TourCaption("BusinessPartnerID")).EditorTemplateName("ddlBusinessPartner").Width(150);
                                columns.Bound(p => p.Code).Title(MessageColumnCaptions.TB_TourCaption("Code")).Width(150);
                                columns.Bound(p => p.StartDate).EditorTemplateName("Date").Title(MessageColumnCaptions.TB_TourCaption("StartDate")).ClientTemplate("#= kendo.toString(StartDate,'dd/MM/yyyy') #").Width(250);
                                columns.Bound(p => p.EndDate).EditorTemplateName("Date").Title(MessageColumnCaptions.TB_TourCaption("EndDate")).ClientTemplate("#= kendo.toString(EndDate,'dd/MM/yyyy') #").Width(250);
                                columns.Bound(p => p.Name_en).Title(MessageColumnCaptions.TB_TourCaption("Name_en")).Width(150);
                                columns.Bound(p => p.Description_en).Title(MessageColumnCaptions.TB_TourCaption("Description_en")).Width(300);
                                columns.Bound(p => p.SpecialNote_en).Title(MessageColumnCaptions.TB_TourCaption("SpecialNote_en")).Width(150);
                                columns.Bound(p => p.Quota).Title(MessageColumnCaptions.TB_TourCaption("Quota")).Width(150);
                                columns.Bound(p => p.TourFrequency).Title(MessageColumnCaptions.TB_TourCaption("TourFrequencyID")).EditorTemplateName("ddlTourFrequency").Width(150);
                                columns.Bound(p => p.Duration).Title(MessageColumnCaptions.TB_TourCaption("Duration")).Width(100);
                                columns.Bound(p => p.Unit).Title(MessageColumnCaptions.TB_TourCaption("DurationUnitID")).EditorTemplateName("ddlDurationUnit").Width(150);
                                columns.Bound(p => p.TourStartDateTime).Title(MessageColumnCaptions.TB_TourCaption("TourStartDateTime")).Width(200);
                                columns.Bound(p => p.Region).Title(MessageColumnCaptions.TB_TourCaption("StartRegionID")).EditorTemplateName("ddlRegion").Width(300);
                                columns.Bound(p => p.ChildAge).Title(MessageColumnCaptions.TB_TourCaption("ChildAge")).Width(100);
                                columns.Bound(p => p.Amount).Title(MessageColumnCaptions.TB_TourCaption("Amount")).Width(100);
                                columns.Bound(p => p.Currency).Title(MessageColumnCaptions.TB_TourCaption("CurrencyID")).EditorTemplateName("ddlCurrencies").Width(150);
                                columns.Bound(p => p.Cost).Title(MessageColumnCaptions.TB_TourCaption("Cost")).Width(150);
                                columns.Bound(p => p.CostCurrencyName).Title(MessageColumnCaptions.TB_TourCaption("CostCurrencyID")).EditorTemplateName("ddlGetCostCurrencies").Width(150);
                                columns.Bound(p => p.Deposit).Title(MessageColumnCaptions.TB_TourCaption("Deposit")).Width(150);
                                columns.Bound(p => p.DepositCurrencyName).Title(MessageColumnCaptions.TB_TourCaption("DepositCurrencyID")).EditorTemplateName("ddlGetDepositCurrency").Width(150);
                                columns.Bound(p => p.TypeDeposit).Title(MessageColumnCaptions.TB_TourCaption("DepositTypeID")).EditorTemplateName("ddlTypeDeposit").Width(150);
                                columns.Bound(p => p.BusinessPartnerCancelPolicyID).Title(MessageColumnCaptions.TB_TourCaption("BusinessPartnerCancelPolicyID")).EditorTemplateName("ddlBusinessPartnerCancelPolicy").Width(200);
                                columns.Bound(p => p.HitCount).Title(MessageColumnCaptions.TB_TourCaption("HitCount")).Width(100);
                                columns.Bound(p => p.IsPopular).Title(MessageColumnCaptions.TB_TourCaption("IsPopular")).Width(100)
                                     .ClientTemplate("<div style='text-align:center;'> #if(IsPopular){# <img src='/Images/checked.gif' alt='checked'> #} else {# <img src='/Images/red_cross.png' alt='redCross'> #}# </div>")
                                     .Width(100);
                                columns.Bound(p => p.Sorts).Title(MessageColumnCaptions.TB_TourCaption("Sort")).Width(100);
                                columns.Bound(p => p.RoutingName).Title(MessageColumnCaptions.TB_TourCaption("RoutingName")).Width(150);
                                columns.Bound(p => p.Active).Title(MessageColumnCaptions.TB_TourCaption("Active")).Width(100)
                                    .ClientTemplate("<div style='text-align:center;'> #if(Active){# <img src='/Images/checked.gif' alt='checked'> #} else {# <img src='/Images/red_cross.png' alt='redCross'> #}# </div>")
                                     .Width(100);
                                columns.Bound(p => p.IPAddress).Title(MessageColumnCaptions.TB_TourCaption("IPAddress")).Width(150);
                                //columns.Bound(p => p.Operation).Title(MessageColumnCaptions.TB_TourCaption("Operation")).Width(300);
                            })
                        .ToolBar(tool =>
                        {
                            tool.Custom().Name("cmdAddNewRecord")
                           .Text(Resources.NewRecord)
                           .HtmlAttributes(new { @id = "cmdAddNewRecord" });
                            tool.Excel().Text(Resources.ExporttoExcel);
                        })
                        .Editable(editable => editable.Mode(GridEditMode.InLine))
                            .Scrollable(scrollable => scrollable.Height(430))
        //.Scrollable().HtmlAttributes(new { @style = "width:1200px;" })
                        .Pageable(p => p.Refresh(true))
                        .Sortable()
                        .Navigatable()
                        .Groupable()
                        .Scrollable(scr => scr.Height(370))
                        .Filterable()
                        .Excel(excel => excel
                            .FileName("TB_TourRpt.xlsx")
                        .Filterable(true))
)



<script id="AddNewRecord">

    $("#cmdAddNewRecord").click(function (e) {

        var table = $("#TB_Tour_Grid").data("kendoGrid");
        var sorting = table.dataSource.sort();

        if (sorting) {
            table.dataSource.sort(null);
        }
        table.addRow();
        e.preventDefault();
        //put custom logic here
    });
</script>
