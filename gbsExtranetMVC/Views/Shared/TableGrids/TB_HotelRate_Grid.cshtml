@using Resources
@using MessageColumnCaptions



<h1 style="text-align:center;">@MessageColumnCaptions.DynamicPageName("TB_HotelRate")</h1>

<div class="jumbotron" style="text-align: left; margin-bottom: 50px;border-radius:8px;padding: 10px;font-size: 15px;font-weight: 100;line-height: 1.142857;">
    <div class="row">
       
        <div class="col-md-12">
            <div class="col-md-4  col-sm-4">
                <div class="col-md-2  col-sm-2" >
                    <label> @MessageColumnCaptions.TB_HotelRate("DateID")</label>
                </div>
                <div class="col-md-8  col-sm-8" >
                    <input style="width:100%" id="drpDates"/>
                </div>

            </div>
            <div class="col-md-4  col-sm-4">

                <div class="col-md-2  col-sm-2" >
                    <label>@MessageColumnCaptions.TB_HotelRate("HotelRoomID") </label>
                </div>
                <div class="col-md-8  col-sm-8" >
                    <input type="text" id="txtroomid" style="width: 100%; height:25px;" />
                </div>

            </div>


            <div class="col-md-4  col-sm-4" style="padding: 10px;">
                <button id="btnfilter" class="btn btn-info" onclick="Filter()">@Resources.Filter</button>
                <button class="btn btn-info" id="btnClearFilter" onclick="clearFiter()">@Resources.RemoveFilter</button>
            </div>
        </div>
    </div>
</div>

<script>

    $("#btnfilter").click(function () {

        $filter = new Array();
        $hotelRoomid = $("#txtroomid").val();
        $Date = $("#drpDates").val();
       

        if ($hotelRoomid) {
            $filter.push({ field: "HotelRoomID", operator: "equals", value: $hotelRoomid });
        }
        //if ($Date) {
        //    $filter.push({ field: "Date", operator: "IsGreaterThanOrEqualTo", value: $Date });
        //}
       
        var grid = $("#TB_HotelRate_Grid").data("kendoGrid");
        grid.dataSource.filter($filter);
    });

    var AllSelectText = '@Resources.ListAllExpression'

    $(document).ready(function () {

        var json = {}
        $.ajax({
            type: "GET",
            url: "/DropDownLists/GetDates",
            data: json,
            datatype: "json",
            success: function (data) {

                $("#drpDates").kendoDropDownList({

                    filter: "contains",
                    optionLabel: AllSelectText,
                    dataTextField: "Date",
                    dataValueField: "DateID ",
                    dataSource: data
                });

            }
        })
    });



    function clearFiter() {
        $("form.k-filter-menu button[type='reset']").trigger("click");
    }

    $("#btnClearFilter").click(function (e) {
        e.preventDefault();
        var datasource = $("#TB_HotelRate_Grid").data("kendoGrid").dataSource;
        //Clear Custom filters:
        datasource.filter([]);
        //Clear Fields
        $("#drpDates").val('')
        $("#txtroomid").val('');
      
    });
    function RefreshGrid(e) {
        this.read();
    }
</script>

@(Html.Kendo().Grid<gbsExtranetMVC.Models.Repositories.TB_HotelRateExt>()
                    .Name("TB_HotelRate_Grid")
        .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(25)
            .Events(events => events.Error("onError").Sync("RefreshGrid"))
        .ServerOperation(true)
        .Model(model =>
        {
            model.Id(p => p.ID);
            model.Field(p => p.ID).Editable(false);
        })
                    .Create(update => update.Action("_Create", "TB_HotelRate"))
                            .Read(read => read.Action("_Read", "TB_HotelRate", new { TableID = (int)ViewBag.TableID }))
                            .Update(update => update.Action("_Update", "TB_HotelRate"))
                            .Destroy(destroy => destroy.Action("_Destroy", "TB_HotelRate"))

        )

                .Columns(columns =>
                {
                    columns.Command(

                       command =>
                       {
                           command.Edit().UpdateText(Resources.Update).CancelText(Resources.Cancel).Text(Resources.Edit);
                           command.Destroy().Text(Resources.Delete);
                       }).Locked(true).Width(180);

                    columns.Bound(p => p.ID).Width(150);
                    columns.Bound(p => p.HotelRoomID).Title(MessageColumnCaptions.TB_HotelRate("HotelRoomID")).EditorTemplateName("ddlHotelRoomID").Width(350);
                    columns.Bound(p => p.Date).Title(MessageColumnCaptions.TB_HotelRate("DateID")).ClientTemplate("#= kendo.toString(Date,'MM/dd/yyyy HH:mm:ss') #").EditorTemplateName("ddlDates").Width(350);
                    columns.Bound(p => p.PricePolicy).Title(MessageColumnCaptions.TB_HotelRate("PricePolicyTypeID")).EditorTemplateName("ddlPricePolicy").Width(350);
                    columns.Bound(p => p.HotelAccommodation).Title(MessageColumnCaptions.TB_HotelRate("HotelAccommodationTypeID")).EditorTemplateName("ddlHotelTypeAccommodation").Width(350); 
                    columns.Bound(p => p.SinglePrice).Width(250).Title(MessageColumnCaptions.TB_HotelRate("SinglePrice"));
                    columns.Bound(p => p.DoublePrice).Width(200).Title(MessageColumnCaptions.TB_HotelRate("DoublePrice"));
                    columns.Bound(p => p.RoomPrice).Width(250).Title(MessageColumnCaptions.TB_HotelRate("RoomPrice"));
                    columns.Bound(p => p.Currency).Width(250).Title(MessageColumnCaptions.TB_HotelRate("CurrencyID")).EditorTemplateName("ddlCurrencies").Width(350); 

                })
                .ToolBar(tool =>
                {
                    tool.Custom().Name("cmdAddNewRecord")
                   .Text(Resources.NewRecord)
                   .HtmlAttributes(new { @id = "cmdAddNewRecord" });
                    tool.Excel().Text(Resources.ExporttoExcel);
                })
                .Editable(editable => editable.Mode(GridEditMode.InLine))
                    .Scrollable(scrollable => scrollable.Height(430))
        //.Scrollable().HtmlAttributes(new { @style = "width:1200px;" })

                .Pageable(p => p.Refresh(true))
                .Sortable()
                .Navigatable()
                .Groupable()
                .Scrollable(scr => scr.Height(370))
                .Filterable()
                .Excel(excel => excel
                        .FileName("TB_HotelRate.xlsx")
                .Filterable(true))

)

<script id="AddNewRecord">

    $("#cmdAddNewRecord").click(function (e) {

        var table = $("#TB_HotelRate_Grid").data("kendoGrid");
        var sorting = table.dataSource.sort();

        if (sorting) {
            table.dataSource.sort(null);
        }
        table.addRow();
        e.preventDefault();
        //put custom logic here
    });
</script>
