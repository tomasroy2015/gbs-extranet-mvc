@using Resources
@using MessageColumnCaptions


<h1 style="text-align:center;">@MessageColumnCaptions.DynamicPageName("BizTbl_Table")</h1>

<div class="jumbotron" style="text-align: left; margin-bottom: 50px;border-radius:8px;padding: 10px;font-size: 15px;font-weight: 100;line-height: 1.142857;">
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-4 col-sm4">
               
                <div class="col-md-12 col-sm-12 " style="padding: 8px;">
                    <input type="text" id="TxtName" class="form-control" placeholder="@Resources.Name" style="width: 100%;" />
                </div>
            </div>
            <div class="col-md-4  col-sm-4" style="padding: 10px;">
                <button id="btnfilter" class="k-button btn btn-info" onclick="Filter()">@Resources.Filter</button>
                <button class="k-button btn btn-info" id="btnClearFilter" onclick="clearFiter()">@Resources.RemoveFilter</button>
            </div>
            </div>
        </div>
    </div>
<script>
    function RefreshGrid(e) {
        this.read();
    }

</script>

            @(Html.Kendo().Grid<gbsExtranetMVC.Models.Repositories.BizTbl_TableExt>()
                .Name("BizTbl_TableExt_Grid")
                
        .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(25)
                .Events(events => events.Error("onError").Sync("RefreshGrid"))

        .ServerOperation(true)
        .Model(model =>
        {
            model.Id(p => p.ID);
            model.Field(p => p.ID).Editable(false);
        })
                .Create(update => update.Action("_Create", "BizTbl_Table"))
                .Read(read => read.Action("_Read", "BizTbl_Table", new { TableID = (int)ViewBag.TableID }))
                .Update(update => update.Action("_Update", "BizTbl_Table"))
                .Destroy(destroy => destroy.Action("_Destroy", "BizTbl_Table"))

        )

                .Columns(columns =>
                {
                    columns.Command(

                       command =>
                       {
                           command.Edit().UpdateText(Resources.Update).CancelText(Resources.Cancel).Text(Resources.Edit);
                           command.Destroy().Text(Resources.Delete);
                       }).Locked(true).Width(180);

                    columns.Bound(p => p.ID).Width(50).Locked(true); //EditorTemplateName (/Shared/EditorTempaltes/ddlCountries) used to Display Dropdown list and it will return Int value to Controller
                    columns.Bound(p => p.Name).Title(MessageColumnCaptions.BizTbl_TableCaption("Name")).Width(150).Locked(true);
                    columns.Bound(p => p.Description).Title(MessageColumnCaptions.BizTbl_TableCaption("Description_en")).Width(150).Locked(true);
                    columns.Bound(p => p.LogStatus).Title(MessageColumnCaptions.BizTbl_TableCaption("Logged")).Width(100)
                          .ClientTemplate("<div style='text-align:center;'> #if(LogStatus){# <img src='/Images/checked.gif' alt='checked'> #} else {# <img src='/Images/red_cross.png' alt='redCross'> #}# </div>");
                    columns.Bound(p => p.EditableStatus).Title(MessageColumnCaptions.BizTbl_TableCaption("Editable")).Width(100)
                          .ClientTemplate("<div style='text-align:center;'> #if(EditableStatus){# <img src='/Images/checked.gif' alt='checked'> #} else {# <img src='/Images/red_cross.png' alt='redCross'> #}# </div>");
                    columns.Bound(p => p.DescriptiveFields).Title(MessageColumnCaptions.BizTbl_TableCaption("DescriptiveFields")).Width(200);
                    columns.Bound(p => p.ViewableFields).Title(MessageColumnCaptions.BizTbl_TableCaption("ViewableFields")).Width(350);
                    columns.Bound(p => p.OrderFields).Title(MessageColumnCaptions.BizTbl_TableCaption("OrderFields")).Width(150);
                    columns.Bound(p => p.FilterFields).Title(MessageColumnCaptions.BizTbl_TableCaption("FilterFields")).Width(350);
                    columns.Bound(p => p.FilterExpression).Title(MessageColumnCaptions.BizTbl_TableCaption("FilterExpression")).Width(150);
                    columns.Bound(p => p.PagingSize).Title(MessageColumnCaptions.BizTbl_TableCaption("PagingSize")).Width(150);
                    columns.Bound(p => p.NewRecordVisible).Title(MessageColumnCaptions.BizTbl_TableCaption("NewRecordVisible")).Width(100)
                     .ClientTemplate("<div style='text-align:center;'> #if(NewRecordVisible){# <img src='/Images/checked.gif' alt='checked'> #} else {# <img src='/Images/red_cross.png' alt='redCross'> #}# </div>");
                })
                .ToolBar(tool =>
                {
                    tool.Custom().Name("cmdAddNewRecord")
                   .Text(Resources.NewRecord)
                   .HtmlAttributes(new { @id = "cmdAddNewRecord" });
                    tool.Excel().Text(Resources.ExporttoExcel);
                })
                .Editable(editable => editable.Mode(GridEditMode.InLine))
                    .Scrollable(scrollable => scrollable.Height(430))
                //.Scrollable().HtmlAttributes(new { @style = "width:1200px;" })

                .Pageable(p => p.Refresh(true))
                .Sortable()
                .Navigatable()
                .Groupable()
                .Scrollable(scr => scr.Height(370))
                .Filterable()
                .Excel(excel => excel
                .FileName("BizTbl_TableExt.xlsx")
                .Filterable(true))

            )

            <script id="AddNewRecord">

                $("#cmdAddNewRecord").click(function (e) {

                    var table = $("#BizTbl_TableExt_Grid").data("kendoGrid");
                    var sorting = table.dataSource.sort();

                    if (sorting) {
                        table.dataSource.sort(null);
                    }
                    table.addRow();
                    e.preventDefault();
                    //put custom logic here
                });
            </script>


<script>

    $("#btnfilter").click(function () {
        $filter = new Array();
        $Name = $("#TxtName").val();
        

        if ($Name) {
            $filter.push({ field: "Name", operator: "contains", value: String($Name) });
        }
       

        var grid = $("#BizTbl_TableExt_Grid").data("kendoGrid");
        grid.dataSource.filter($filter);
    });



   



    function clearFiter() {
        $("form.k-filter-menu button[type='reset']").trigger("click");
    }

    $("#btnClearFilter").click(function (e) {
        e.preventDefault();
        var datasource = $("#BizTbl_TableExt_Grid").data("kendoGrid").dataSource;
        //Clear Custom filters:
        datasource.filter([]);
        //Clear Fields
        $("#TxtName").val('')
       
    });

</script>